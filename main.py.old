import konna
import math
from ympyränkaari import *
import random
from graphics import *
import time
import copy

window = GraphWin('Matcup', 1000, 1000)


def etäisyysNäytöllä(piste_1, piste_2):
    pos_1_x, pos_1_y, pos_2_x, pos_2_y = 0, 0, 0, 0

    if isinstance(piste_1, Point):
        pos_1_x = piste_1.x
        pos_1_y = piste_1.y
    else:
        pos_1_x = piste_1[0]
        pos_1_y = piste_1[1]

    if isinstance(piste_2, Point):
        pos_2_x = piste_2.x
        pos_2_y = piste_2.y
    else:
        pos_2_x = piste_2[0]
        pos_2_y = piste_2[1]

    pos_x_delta = abs(pos_2_x - pos_1_x)
    pos_y_delta = abs(pos_2_y - pos_1_y)

    return math.sqrt(pos_x_delta ** 2 + pos_y_delta ** 2)

def listasta(lista, indeksi):
    return [lista[indeksi - 1], lista[indeksi], lista[(indeksi + 1) % len(lista)]]

def kulma(oikea_piste, kärkipiste, vasen_piste):
    A = etäisyysNäytöllä(oikea_piste, kärkipiste)
    B = etäisyysNäytöllä(vasen_piste, kärkipiste)
    C = etäisyysNäytöllä(oikea_piste, vasen_piste)

    kulma = math.degrees(math.acos((A * A + B * B - C * C)/(2.0 * A * B)))
    return kulma

kulmien_määrä = 5

sivut = [i * 10 for i in range(kulmien_määrä - 1, 2 * kulmien_määrä - 1)]

s = copy.deepcopy(sivut)



piste = None

pisteet = [Point(0, 0)]

a = Annulus(0, 0, sivut.pop(random.randint(0, len(sivut) - 1)))

viimeinen_kehä = None

total = 0

while sivut:
    hyppykulma = random.randint(0, 90)
    total += hyppykulma

    hyppykulma += total
    print(hyppykulma)

    piste = a.jump(hyppykulma)

    if int(etäisyysNäytöllä(piste, (0, 0))) < sum(sivut):
        print('true', piste, etäisyysNäytöllä(piste, (0, 0)), sivut)

        pisteet.append(piste)

        a = Annulus(piste.x, piste.y, sivut.pop(random.randint(0, len(sivut) - 1)))

    if len(sivut) == 1:
        print('moi')
        ensimmäinen_kehä = Annulus(0, 0, etäisyysNäytöllä((0, 0), pisteet[1]))
        # ensimmäinen_kehä.drawPoints(window)
        # a.drawPoints(window)
        print(ensimmäinen_kehä, a)
        leikkaa = ensimmäinen_kehä.intercept(a)
        piste = 0

        print('leikkaa')
        for i in leikkaa:
            print(kulma(pisteet[-1], i, (0, 0)))
            if kulma(pisteet[-1], i, (0, 0)) < 180:
                piste = Point(*i)
                break

        if not isinstance(piste, int):
            pisteet.append(piste)

        break

pisteet.append(pisteet[0])

# print(etäisyysNäytöllä(pisteet[-1], pisteet[-2]))
# print(s)
# quit()

print(s)

for i in range(len(pisteet)):
    line = Line(pisteet[i], pisteet[(i + 1) % len(pisteet)])
    line.move(window.getWidth() / 2, window.getHeight() / 2)
    line.draw(window)
    time.sleep(1)
    print(f'pituus: {etäisyysNäytöllä(line.p1, line.p2)}')


input()
